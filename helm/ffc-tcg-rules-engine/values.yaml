environment: production
environmentCode:
name: ffc-tcg-rules-engine
namespace: ffc-tcg
workstream: ffc-tcg
image: ffc-tcg-rules-engine

labels:
  component: service

appInsights:
  connectionString:

containerConfigMap:
  name: ffc-tcg-rules-engine-config-map

containerSecret:
  name: ffc-tcg-rules-engine-container-secret
  type: Opaque

deployment: {}

container:
  requestMemory: 120Mi
  requestCpu: 40m
  limitMemory: 600Mi
  limitCpu: 200m
  port: 3002
  messageQueueHost: namespace.servicebus.windows.net
  redisHostname: redis-redis-ha.default
  redisPassword: redis
  redisPort: 6379
  redisPartition: ffc-tcg-rules-engine
  azureStorageAccountName: sfiland
  azureStorageConnectionString: dummy
  azureStorageUseConnectionString: false

postgresService:
  postgresDb: ffc_tcg_rules_engine
  postgresExternalName:
  postgresHost: ffc-tcg-rules-engine-postgresql.default
  postgresPort: 5432
  postgresSchema: public
  postgresUser: postgres

aadPodIdentity: true

azureIdentity:
  clientID: not-a-real-clientID
  resourceID: not-a-real-resourceID

livenessProbe:
  path: /healthz
  port: 3002
  initialDelaySeconds: 20
  periodSeconds: 10
  failureThreshold: 3
  timeoutSeconds: 5

readinessProbe:
  path: /healthy
  port: 3002
  initialDelaySeconds: 30
  periodSeconds: 10
  failureThreshold: 3
  timeoutSeconds: 5
